{"ast":null,"code":"var _jsxFileName = \"/Users/ozaratemorera/projects/weather-app/src/components/FetchWeather.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FetchWeather extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      weather: null,\n      city: null\n    };\n  }\n\n  async componentDidMount() {\n    const request = await fetch(\"http://api.openweathermap.org/data/2.5/forecast?id=3623484&mode=json&units=metric&appid=fdedcbb70a2fb6a9f6ff81929d1316d6\").then(res => res.json());\n    console.log({\n      request\n    });\n    const weatherFromRequest = request.list.map(wSet => {\n      console.log(wSet);\n    });\n    console.log({\n      weatherFromRequest\n    });\n    const update = {\n      city: request.city,\n      loading: false\n    };\n    this.setState(update);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.city && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.state.city.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.city.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" loading ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Weather ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ozaratemorera/projects/weather-app/src/components/FetchWeather.js"],"names":["React","FetchWeather","Component","state","loading","weather","city","componentDidMount","request","fetch","then","res","json","console","log","weatherFromRequest","list","map","wSet","update","setState","render","name","country"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACxDC,KADwD,GAChD;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,IAAI,EAAE;AAHA,KADgD;AAAA;;AAOjC,QAAjBC,iBAAiB,GAAG;AACxB,UAAMC,OAAO,GAAG,MAAMC,KAAK,CACzB,0HADyB,CAAL,CAEpBC,IAFoB,CAEdC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFM,CAAtB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEN,MAAAA;AAAF,KAAZ;AAEA,UAAMO,kBAAkB,GAAGP,OAAO,CAACQ,IAAR,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AACpDL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD,KAF0B,CAA3B;AAIAL,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,MAAAA;AAAF,KAAZ;AAEA,UAAMI,MAAM,GAAG;AAAEb,MAAAA,IAAI,EAAEE,OAAO,CAACF,IAAhB;AAAsBF,MAAAA,OAAO,EAAE;AAA/B,KAAf;AAEA,SAAKgB,QAAL,CAAcD,MAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKlB,KAAL,CAAWG,IAAX,iBACC;AAAA,gCACE;AAAA,oBAAK,KAAKH,KAAL,CAAWG,IAAX,CAAgBgB;AAArB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAK,KAAKnB,KAAL,CAAWG,IAAX,CAAgBiB;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQG,KAAKpB,KAAL,CAAWC,OAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA1CuD","sourcesContent":["import React from \"react\";\n\nexport default class FetchWeather extends React.Component {\n  state = {\n    loading: true,\n    weather: null,\n    city: null,\n  };\n\n  async componentDidMount() {\n    const request = await fetch(\n      \"http://api.openweathermap.org/data/2.5/forecast?id=3623484&mode=json&units=metric&appid=fdedcbb70a2fb6a9f6ff81929d1316d6\"\n    ).then((res) => res.json());\n\n    console.log({ request });\n\n    const weatherFromRequest = request.list.map((wSet) => {\n      console.log(wSet);\n    });\n\n    console.log({ weatherFromRequest });\n\n    const update = { city: request.city, loading: false };\n\n    this.setState(update);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.city && (\n          <div>\n            <h2>{this.state.city.name}</h2>\n            <h3>{this.state.city.country}</h3>\n          </div>\n        )}\n\n        {this.state.loading ? (\n          <div> loading ... </div>\n        ) : (\n          <div> Weather ... </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}