{"ast":null,"code":"var _jsxFileName = \"/Users/ozaratemorera/projects/weather-app/src/components/WeatherList/index.js\";\nimport React from \"react\";\nimport CityInfo from \"../CityInfo\";\nimport WetherSetInfo from \"../WeatherSetInfo/\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class WeatherList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      weather: null,\n      city: null\n    };\n  }\n\n  // Did Mount action\n  // Run after first render\n  async componentDidMount() {\n    // async request\n    const request = await fetch(\"http://api.openweathermap.org/data/2.5/forecast?id=3623486&mode=json&units=metric&appid=fdedcbb70a2fb6a9f6ff81929d1316d6\").then(res => res.json()); // Data selection & transformation\n\n    const weatherFromRequest = request.list.map(wSet => {\n      const cleanWSet = {\n        date: wSet.dt_txt,\n        weather: wSet.weather[0],\n        temperature: wSet.main\n      };\n      return cleanWSet;\n    }); // prepared update for next state\n\n    const update = {\n      city: request.city,\n      loading: false,\n      weather: weatherFromRequest\n    }; // set of new state\n\n    this.setState(update);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-container\",\n      children: [this.state.city && /*#__PURE__*/_jsxDEV(CityInfo, {\n        city: this.state.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Weather list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-container\",\n          children: this.state.weather.map(set => {\n            return /*#__PURE__*/_jsxDEV(WetherSetInfo, {\n              set: set\n            }, set.date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ozaratemorera/projects/weather-app/src/components/WeatherList/index.js"],"names":["React","CityInfo","WetherSetInfo","WeatherList","Component","state","loading","weather","city","componentDidMount","request","fetch","then","res","json","weatherFromRequest","list","map","wSet","cleanWSet","date","dt_txt","temperature","main","update","setState","render","set"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,cAAP;;AAEA,eAAe,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAEvDC,KAFuD,GAE/C;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,IAAI,EAAE;AAHA,KAF+C;AAAA;;AAQvD;AACA;AACuB,QAAjBC,iBAAiB,GAAG;AACxB;AACA,UAAMC,OAAO,GAAG,MAAMC,KAAK,CACzB,0HADyB,CAAL,CAEpBC,IAFoB,CAEdC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFM,CAAtB,CAFwB,CAMxB;;AACA,UAAMC,kBAAkB,GAAGL,OAAO,CAACM,IAAR,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AACpD,YAAMC,SAAS,GAAG;AAChBC,QAAAA,IAAI,EAAEF,IAAI,CAACG,MADK;AAEhBd,QAAAA,OAAO,EAAEW,IAAI,CAACX,OAAL,CAAa,CAAb,CAFO;AAGhBe,QAAAA,WAAW,EAAEJ,IAAI,CAACK;AAHF,OAAlB;AAKA,aAAOJ,SAAP;AACD,KAP0B,CAA3B,CAPwB,CAgBxB;;AACA,UAAMK,MAAM,GAAG;AACbhB,MAAAA,IAAI,EAAEE,OAAO,CAACF,IADD;AAEbF,MAAAA,OAAO,EAAE,KAFI;AAGbC,MAAAA,OAAO,EAAEQ;AAHI,KAAf,CAjBwB,CAuBxB;;AACA,SAAKU,QAAL,CAAcD,MAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,iBACG,KAAKrB,KAAL,CAAWG,IAAX,iBAAmB,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AAA3B;AAAA;AAAA;AAAA;AAAA,cADtB,EAGG,KAAKH,KAAL,CAAWC,OAAX,gBACC;AAAA,mBACG,GADH,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,EAEa,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAMC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,oBACG,KAAKD,KAAL,CAAWE,OAAX,CAAmBU,GAAnB,CAAwBU,GAAD,IAAS;AAC/B,gCAAO,QAAC,aAAD;AAA8B,cAAA,GAAG,EAAEA;AAAnC,eAAoBA,GAAG,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA3DsD","sourcesContent":["import React from \"react\";\nimport CityInfo from \"../CityInfo\";\nimport WetherSetInfo from \"../WeatherSetInfo/\";\nimport \"./styles.css\";\n\nexport default class WeatherList extends React.Component {\n  // State inicial\n  state = {\n    loading: true,\n    weather: null,\n    city: null,\n  };\n\n  // Did Mount action\n  // Run after first render\n  async componentDidMount() {\n    // async request\n    const request = await fetch(\n      \"http://api.openweathermap.org/data/2.5/forecast?id=3623486&mode=json&units=metric&appid=fdedcbb70a2fb6a9f6ff81929d1316d6\"\n    ).then((res) => res.json());\n\n    // Data selection & transformation\n    const weatherFromRequest = request.list.map((wSet) => {\n      const cleanWSet = {\n        date: wSet.dt_txt,\n        weather: wSet.weather[0],\n        temperature: wSet.main,\n      };\n      return cleanWSet;\n    });\n\n    // prepared update for next state\n    const update = {\n      city: request.city,\n      loading: false,\n      weather: weatherFromRequest,\n    };\n\n    // set of new state\n    this.setState(update);\n  }\n\n  render() {\n    return (\n      <div className=\"city-container\">\n        {this.state.city && <CityInfo city={this.state.city} />}\n\n        {this.state.loading ? (\n          <div>\n            {\" \"}\n            <Loader />{\" \"}\n          </div>\n        ) : (\n          <div>\n            <h3>Weather list</h3>\n            <div className=\"weather-container\">\n              {this.state.weather.map((set) => {\n                return <WetherSetInfo key={set.date} set={set} />;\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}